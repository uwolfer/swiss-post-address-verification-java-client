/*
 * Copyright (C) 2018 Urs Wolfer
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group = 'com.github.uwolfer'

buildscript{
    repositories{
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3',
                  'no.nils:wsdl2java:0.10'
    }
}

repositories{
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'no.nils.wsdl2java'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

wsdl2java {
    wsdlsToGenerate = [
        ['src/main/resources/wsdl/adrCheckerExterne-V4-02-00.wsdl']
    ]
}

dependencies {
    wsdl2java 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
    wsdl2java 'javax.xml.bind:jaxb-api:2.3.1'
    wsdl2java 'javax.xml.ws:jaxws-api:2.3.1'
    wsdl2java 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
    wsdl2java 'javax.jws:javax.jws-api:1.1'

    implementation 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'javax.xml.ws:jaxws-api:2.3.1'
    implementation 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
    implementation 'javax.jws:javax.jws-api:1.1'

    testRuntime 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
    testRuntime 'javax.xml.bind:jaxb-api:2.3.1'
    testRuntime 'javax.xml.ws:jaxws-api:2.3.1'
    testRuntime 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
    testRuntime 'javax.jws:javax.jws-api:1.1'

    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.3")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.3")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
